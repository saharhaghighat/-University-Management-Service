# Generated by Django 4.2.11 on 2024-04-13 17:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.model_helper


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('national_code', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='The national code is wrong.', regex='^\\d{10}$')], verbose_name='national code')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='gender')),
                ('phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='The phone number is wrong. The phone number must be 11 digits and start with 09', regex='^09\\d{9}$')], verbose_name='phone')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=utils.model_helper.user_image_path, verbose_name='profile image')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationalAssistant',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='_assistant', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assistant',
                'verbose_name_plural': 'Assistants',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='_student', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('entry_year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1360), django.core.validators.MaxValueValidator(1460)], verbose_name='entry year')),
                ('gpa', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(20.0)], verbose_name='gpa')),
                ('military_service_status', models.BooleanField(default=False, verbose_name='military service status')),
                ('academic_probation_years', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(12)], verbose_name='academic probation years')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='_teacher', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('specialization', models.CharField(max_length=255, verbose_name='specialization')),
                ('academic_rank', models.CharField(choices=[('assistant_p', 'Assistant Professor'), ('associate_p', 'Associate Professor'), ('full_p', 'Professor')], max_length=11, verbose_name='academic rank')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
    ]
